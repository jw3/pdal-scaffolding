#!/usr/bin/env bash

readonly srcdir="$PWD"
readonly type="${1:-filter}"
readonly name="cmake-build-My${type}Plugin"
readonly root="$srcdir/$name"

rm -rf "$root"

mkdir -p "$root/build"
mkdir -p "$root/scaffolding"

cd "$root/scaffolding"

cmake \
-DPLUGIN_TYPE="$type" \
-DPLUGIN_NAME="My${type}Plugin" \
-DPLUGIN_DESCRIPTION="My awesome $type" \
-DPLUGIN_NAMESPACE="$NS" \
-DTARGET_DIR="$root" \
-DCXX_STANDARD="17" \
"$srcdir" > /dev/null

cd "$root"
git init > /dev/null
git commit --allow-empty -m "initialize repository" > /dev/null
git add . > /dev/null
git commit -m "initialize project" > /dev/null
git tag -a -m "initialized" v1.2.3

cd "$root/build"
pwd
conan install "$root"
cmake -DWITH_PACKAGING=ON -DCPACK_PACKAGE_CONTACT="$USER" -DCPACK_GENERATOR="DEB;STGZ;TGZ;RPM" "$root"
make package

conan export-pkg .. jw3/test -f

mkdir conan
cd conan
conan install -g txt My${type}Plugin/1.0.0@jw3/test

export PDAL_DRIVER_PATH=$(cat conanbuildinfo.txt | grep My | grep 'lib$' | head -n1)
echo "testing driver path at $PDAL_DRIVER_PATH"

if [[ "$type" == "filter" ]];   then result=$(pdal --drivers | grep My)
elif [[ "$type" == "kernel" ]]; then result=$(pdal --list-commands | grep My)
fi

if [[ ! -z "$result" ]]; then
  echo "$result"
  echo "Success!"
  pdal My${type}Plugin
  exit 0;
else
  echo "$result"
  echo "Failure!"
  exit 1;
fi
